version: "3.3"

services:
  docker-mongo:
    image: mongo:4.4
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    hostname: 127.0.0.1
    ports:
      - "27017:27017"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "0.5"
          memory: "512M"

  docker-elastic:
    image: elasticsearch:7.17.4
    environment:
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - http.host=0.0.0.0
      - xpack.security.enabled=false
      - transport.host=0.0.0.0
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2G"
        reservations:
          cpus: "0.5"
          memory: "512M"

  docker-redis:
    image: redis:6
    ports:
      - "6379:6379"

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.4
#    environment:
#      - ELASTICSEARCH_HOSTS=http://docker-elastic:9200
#    depends_on:
#      - docker-elastic
#    ports:
#      - "5601:5601"
