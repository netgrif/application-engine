<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://petriflow.com/petriflow.schema.xsd">
	<id>wizard_cron</id>
	<initials>CRO</initials>
	<title>Cron Wizard</title>
	<icon>settings</icon>
	<defaultRole>true</defaultRole>
	<anonymousRole>true</anonymousRole>
	<transitionRole>false</transitionRole>
	<caseName>Wizard</caseName>
	<role>
		<id>admin</id>
		<title>Admin</title>
	</role>
	<function scope="process" name="updateCronDescription">
		{  def cron_description ->
			change cron_description value { "0 " + useCase.getFieldValue("minutes") + " " + useCase.getFieldValue("hours") + " " + useCase.getFieldValue("day_of_month") + " " + useCase.getFieldValue( "month" ) + " "	+ useCase.getFieldValue("day_of_week") + " *"}
		}
	</function>
	<data type="boolean">
		<id>active</id>
		<title>Aktívny</title>
		<init>false</init>
	</data>
	<data type="text">
		<id>cron_description</id>
		<title>Cron Description</title>
	</data>
	<data type="text">
		<id>process_id</id>
		<title>Id procesu</title>
	</data>
	<data type="enumeration_map">
		<id>process_id_map</id>
		<title>Id procesov</title>
	</data>
	<data type="text">
		<id>minutes</id>
		<title/>
		<init>*</init>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					cron_description: f.cron_description;

					updateCronDescription(cron_description)
				</action>
			</actions>
		</event>
	</data>
	<data type="enumeration_map">
		<id>minutes_enum</id>
		<title>Minúty výber</title>
		<options>
			<option key="every">Každá</option>
			<option key="specific">Špecifická</option>
		</options>
		<init>every</init>
		<event type="set">
			<id>show_minutes</id>
			<actions phase="post">
				<action>
					t_init: t.init,
					t_edit: t.edit,
					minutes_enum: f.minutes_enum,
					minutes_specific: f.minutes_specific,
					minutes: f.minutes;


					make minutes_specific, editable on t_init when { minutes_enum.value == "specific" }
					make minutes_specific, required on t_init when { minutes_enum.value == "specific" }
					make minutes_specific, hidden on t_init when { minutes_enum.value != "specific" }

					make minutes_specific, editable on t_edit when { minutes_enum.value == "specific" }
					make minutes_specific, required on t_edit when { minutes_enum.value == "specific" }
					make minutes_specific, hidden on t_edit when { minutes_enum.value != "specific" }

					if (minutes_enum.value == "every") {
						change minutes value { "*" }
					}
				</action>
			</actions>
		</event>
	</data>
	<data type="multichoice_map">
		<id>minutes_specific</id>
		<title>Minúty</title>
		<options>
			<option key="1">1</option>
			<option key="2">2</option>
			<option key="3">3</option>
			<option key="4">4</option>
			<option key="5">5</option>
			<option key="6">6</option>
			<option key="7">7</option>
			<option key="8">8</option>
			<option key="9">9</option>
			<option key="10">10</option>
			<option key="11">11</option>
			<option key="12">12</option>
		</options>
		<event type="set">
			<id>minutes_specific_set</id>
			<actions phase="post">
				<action>
					minutes: f.minutes,
					minutes_specific: f.minutes_specific;

					change minutes value { minutes_specific.value.join(",") }
				</action>
			</actions>
		</event>
	</data>
	<data type="text">
		<id>hours</id>
		<title/>
		<init>*</init>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					cron_description: f.cron_description;

					updateCronDescription(cron_description)
				</action>
			</actions>
		</event>
	</data>
	<data type="enumeration_map">
		<id>hours_enum</id>
		<title>Hodiny výber</title>
		<options>
			<option key="every">Každá</option>
			<option key="specific">Špecifická</option>
		</options>
		<init>every</init>
		<event type="set">
			<id>show_hours</id>
			<actions phase="post">
				<action>
					t_init: t.init,
					t_edit: t.edit,
					hours: f.hours,
					hours_enum: f.hours_enum,
					hours_specific: f.hours_specific;

					make hours_specific, editable on t_init when { hours_enum.value == "specific" }
					make hours_specific, required on t_init when { hours_enum.value == "specific" }
					make hours_specific, hidden on t_init when { hours_enum.value != "specific" }

					make hours_specific, editable on t_edit when { hours_enum.value == "specific" }
					make hours_specific, required on t_edit when { hours_enum.value == "specific" }
					make hours_specific, hidden on t_edit when { hours_enum.value != "specific" }

					if (hours_enum.value == "every"){
						change hours value { "*" }
					}
				</action>
			</actions>
		</event>
	</data>
	<data type="multichoice_map">
		<id>hours_specific</id>
		<title>Hodiny</title>
		<options>
			<option key="1">1</option>
			<option key="2">2</option>
			<option key="3">3</option>
			<option key="4">4</option>
			<option key="5">5</option>
			<option key="6">6</option>
			<option key="7">7</option>
			<option key="8">8</option>
			<option key="9">9</option>
			<option key="10">10</option>
			<option key="11">11</option>
			<option key="12">12</option>
		</options>
		<event type="set">
			<id>hours_specific_set</id>
			<actions phase="post">
				<action>
					hours_specific: f.hours_specific,
					hours: f.hours;

					change hours value { hours_specific.value.join(",") }
				</action>
			</actions>
		</event>
	</data>
	<data type="enumeration_map">
		<id>day_enum</id>
		<title>Deň Výber</title>
		<options>
			<option key="every">Každý</option>
			<option key="specific_month">Špecifický v mesiaci</option>
			<option key="specific_week">Špecifický v týždni</option>
		</options>
		<init>every</init>
		<event type="set">
			<id>day_enum_set</id>
			<actions phase="post">
				<action>
					day_enum: f.day_enum,
					day_of_month: f.day_of_month,
					day_of_week_select: f.day_of_week_select,
					day_of_week: f.day_of_week,
					day_of_month_select: f.day_of_month_select,
					t_init: t.init,
					t_edit: t.edit;

					make day_of_week_select, editable on t_init when { day_enum.value == "specific_week" }
					make day_of_week_select, required on t_init when { day_enum.value == "specific_week" }
					make day_of_week_select, hidden on t_init when { day_enum.value != "specific_week" }

					make day_of_week_select, editable on t_edit when { day_enum.value == "specific_week" }
					make day_of_week_select, required on t_edit when { day_enum.value == "specific_week" }
					make day_of_week_select, hidden on t_edit when { day_enum.value != "specific_week" }

					make day_of_month_select, editable on t_init when { day_enum.value == "specific_month" }
					make day_of_month_select, required on t_init when { day_enum.value == "specific_month" }
					make day_of_month_select, hidden on t_init when { day_enum.value != "specific_month" }

					make day_of_month_select, editable on t_edit when { day_enum.value == "specific_month" }
					make day_of_month_select, required on t_edit when { day_enum.value == "specific_month" }
					make day_of_month_select, hidden on t_edit when { day_enum.value != "specific_month" }

					if ( day_enum.value == "every"){
						change day_of_month value { "?" }
						change day_of_week value { "*" }
					} else if(day_enum.value == "specific_month"){
						change day_of_week value { "?" }
					} else if(day_enum.value == "specific_week"){
						change day_of_month value { "?" }
					}
				</action>
			</actions>
		</event>
	</data>
	<data type="text">
		<id>day_of_month</id>
		<title>Deň v mesiaci</title>
		<init>?</init>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					cron_description: f.cron_description;

					updateCronDescription(cron_description)
				</action>
			</actions>
		</event>
	</data>
	<data type="multichoice_map">
		<id>day_of_month_select</id>
		<title>Deň v mesiaci</title>
		<options>
			<option key="1">1</option>
			<option key="2">2</option>
			<option key="3">3</option>
		</options>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					day_of_month: f.day_of_month,
					day_of_month_select: f.day_of_month_select;

					change day_of_month value { day_of_month_select.value.join(",") }
				</action>
			</actions>
		</event>
	</data>
	<data type="text">
		<id>day_of_week</id>
		<title>Deň v mesiaci</title>
		<init>*</init>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					cron_description: f.cron_description;

					updateCronDescription(cron_description)
				</action>
			</actions>
		</event>
	</data>
	<data type="multichoice_map">
		<id>day_of_week_select</id>
		<title>Deň v týždni</title>
		<options>
			<option key="?">?</option>
			<option key="MON">Pondelok</option>
			<option key="TUE">Utorok</option>
			<option key="WED">Streda</option>
		</options>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					day_of_week: f.day_of_week,
					day_of_week_select: f.day_of_week_select;

					change day_of_week value { day_of_week_select.value.join(",")}
				</action>
			</actions>
		</event>
	</data>
	<data type="text">
		<id>month</id>
		<title/>
		<init>*</init>
		<event type="set">
			<id>update_cron_description</id>
			<actions phase="post">
				<action>
					cron_description: f.cron_description;

					updateCronDescription(cron_description)
				</action>
			</actions>
		</event>
	</data>
	<data type="enumeration_map">
		<id>month_enum</id>
		<title>Mesiac</title>
		<options>
			<option key="every">Každý</option>
			<option key="specific">Špecifický</option>
		</options>
		<init>every</init>
		<event type="set">
			<id>month_enum_set</id>
			<actions phase="post">
				<action>
					month: f.month,
					month_enum: f.month_enum,
					month_specific: f.month_specific,
					t_init: t.init,
					t_edit: t.edit;

					make month_specific, editable on t_init when { month_enum.value == "specific" }
					make month_specific, required on t_init when { month_enum.value == "specific" }
					make month_specific, hidden on t_init when { month_enum.value != "specific" }

					make month_specific, editable on t_edit when { month_enum.value == "specific" }
					make month_specific, required on t_edit when { month_enum.value == "specific" }
					make month_specific, hidden on t_edit when { month_enum.value != "specific" }

					if (month_enum.value == "every") {
						change month value { "*" }
					}
				</action>
			</actions>
		</event>
	</data>
	<data type="multichoice_map">
		<id>month_specific</id>
		<title>Mesiac</title>
		<options>
			<option key="JAN">Január</option>
			<option key="FEB">Február</option>
		</options>
		<event type="set">
			<id>month_specific_set</id>
			<actions phase="post">
				<action>
					month: f.month,
					month_specific: f.month_specific;

					change month value { month_specific.value.join(",") }
				</action>
			</actions>
		</event>
	</data>
	<data type="text">
		<id>log_text</id>
		<title>Log</title>
	</data>
	<data type="boolean">
		<id>edit_description_manually</id>
		<title>Upraviť cron manuálne</title>
		<init>false</init>
	</data>
	<transition>
		<id>init</id>
		<x>220</x>
		<y>460</y>
		<label>Základné údaje</label>
		<icon>create</icon>
		<assignPolicy>auto</assignPolicy>
		<dataGroup>
			<id>init_0</id>
			<cols>6</cols>
			<layout>grid</layout>
			<dataRef>
				<id>minutes_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>minutes_specific</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>hours_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>hours_specific</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>day_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>day_of_month_select</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>

			</dataRef>
			<dataRef>
				<id>day_of_week_select</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>month_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>month_specific</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>cron_description</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>edit_description_manually</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>2</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<event type="set">
					<id>enable_description</id>
					<actions phase="post">
						<action>
							edit_description_manually: f.edit_description_manually,
							cron_description: f.cron_description,
							trans: t.this;

							make cron_description, editable on trans when { edit_description_manually.value == true }
							make cron_description, visible on trans when { edit_description_manually.value == false }
						</action>
					</actions>
				</event>
			</dataRef>
			<dataRef>
				<id>process_id_map</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>3</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<component>
					<name>autocomplete</name>
				</component>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>init_assign</id>
			<actions phase="pre">
				<action>
					process_id_map: f.process_id_map;

					def nets = petriNetService.getAll()
					def netOptions = [:]
					nets.each{ netOptions.put(it.importId, it.title) }

					change process_id_map options { netOptions }
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>activate</id>
		<x>500</x>
		<y>460</y>
		<label>Aktivovať</label>
		<icon>toggle_on</icon>
		<assignPolicy>auto</assignPolicy>
		<finishPolicy>auto_no_data</finishPolicy>
		<event type="finish">
			<id>activate_finish</id>
			<actions phase="pre">
				<action id="createJob">
					cronJobService.createJob(useCase)
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>log</id>
		<x>660</x>
		<y>580</y>
		<label>Log</label>
		<layout type="legacy"/>
		<icon>format_align_justify</icon>
		<dataGroup>
			<id>log_group</id>
			<layout>legacy</layout>
			<stretch>true</stretch>
			<dataRef>
				<id>log_text</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>deactivate</id>
		<x>500</x>
		<y>340</y>
		<label>Deaktivovať</label>
		<icon>toggle_off</icon>
		<assignPolicy>auto</assignPolicy>
		<finishPolicy>auto_no_data</finishPolicy>
		<event type="finish">
			<id>deactivate_finish</id>
			<actions phase="pre">
				<action>
					cronJobService.deactivateJob(useCase)
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>edit</id>
		<x>340</x>
		<y>340</y>
		<label>Upraviť</label>
		<icon>create</icon>
		<assignPolicy>auto</assignPolicy>
		<dataGroup>
			<id>edit_0</id>
			<cols>6</cols>
			<layout>grid</layout>
			<dataRef>
				<id>cron_description</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>process_id_map</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>3</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<component>
					<name>autocomplete</name>
				</component>
			</dataRef>
			<dataRef>
				<id>minutes_specific</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>hours_specific</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>day_of_month_select</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>day_of_week_select</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>edit_description_manually</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>2</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<event type="set">
					<id>enable_description</id>
					<actions phase="post">
						<action>
							edit_description_manually: f.edit_description_manually,
							cron_description: f.cron_description,
							trans: t.this;

							make cron_description, editable on trans when { edit_description_manually.value == true }
							make cron_description, visible on trans when { edit_description_manually.value == false }
						</action>
					</actions>
				</event>
			</dataRef>
			<dataRef>
				<id>minutes_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>hours_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>1</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>day_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>month_enum</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>month_specific</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>4</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>delete</id>
		<x>340</x>
		<y>580</y>
		<label>Odstrániť</label>
		<event type="finish">
			<id>delete_finish</id>
			<actions phase="post">
				<action>
					async.run {
						workflowService.deleteCase(useCase.stringId)
					}
				</action>
			</actions>
		</event>
	</transition>
	<place>
		<id>p1</id>
		<x>100</x>
		<y>460</y>
		<label>init</label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p2</id>
		<x>340</x>
		<y>460</y>
		<label>Pravidlo neaktívne</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p3</id>
		<x>660</x>
		<y>460</y>
		<label>Pravidlo aktívne</label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<arc>
		<id>a1</id>
		<type>regular</type>
		<sourceId>p1</sourceId>
		<destinationId>init</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a2</id>
		<type>regular</type>
		<sourceId>init</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a3</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>activate</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a4</id>
		<type>regular</type>
		<sourceId>activate</sourceId>
		<destinationId>p3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a10</id>
		<type>regular</type>
		<sourceId>p3</sourceId>
		<destinationId>deactivate</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a12</id>
		<type>regular</type>
		<sourceId>deactivate</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a13</id>
		<type>read</type>
		<sourceId>p3</sourceId>
		<destinationId>log</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a14</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>edit</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a15</id>
		<type>regular</type>
		<sourceId>edit</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a16</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>delete</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>