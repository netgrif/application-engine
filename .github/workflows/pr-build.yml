name: Pull Request
on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: mvn clean verify -DskipTests=true

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 200
    services:

      redis:
        image: redis
        ports:
          - 6379:6379

      elasticsearch:
        image: elasticsearch:7.17.3
        ports:
          - 9200:9200
          - 9300:9300
        options: -e="discovery.type=single-node" -e="xpack.security.enabled=false" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Start MongoDB
        uses: MongoCamp/mongodb-github-action@1.2.0
        with:
          mongodb-version: 4.4
          mongodb-replica-set: rs0

      - name: Wait for Elasticsearch to be ready
        run: |
          echo "Waiting for Elasticsearch to be ready..."
          for i in {1..30}; do
            if curl -fsSL http://localhost:9200/_cluster/health | grep '"status":"green"' &>/dev/null; then
              echo "Elasticsearch is up"
              break
            fi
            echo "Waiting for Elasticsearch..."
            sleep 2
          done

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          for i in {1..30}; do
            if mongo --eval "printjson(db.serverStatus())" &>/dev/null; then
              echo "MongoDB is up"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Test Database
        env:
          ELASTIC_SEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
          MONGO_URL: http://localhost:27017
        run: |
          echo $ELASTIC_SEARCH_URL
          echo $MONGO_URL
          curl -fsSL "$ELASTIC_SEARCH_URL/_cat/health?h=status"
          curl -fsSL "$MONGO_URL"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Generate certificates
        run: cd src/main/resources/certificates && openssl genrsa -out keypair.pem 4096 && openssl rsa -in keypair.pem -pubout -out public.crt && openssl pkcs8 -topk8 -inform PEM -outform DER -nocrypt -in keypair.pem -out private.der && cd ../../../..

      - name: Build
        run: mvn clean package install -DskipTests=true

#       Upgrade Java
#      - name: Build, test, and analyze
#        timeout-minutes: 180
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=netgrif_application-engine

      - name: Build, test
        timeout-minutes: 180
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B test